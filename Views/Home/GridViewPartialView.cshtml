@using DXMVCTestApplication.Models
@functions{
    object GetEditingItem(DataSource dataSource)
    {
        if (dataSource.IsNewRowEditing)
            return new Patient();
        return dataSource.GetRow(dataSource.EditingRowVisibleIndex);
    }
}

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var dataSource = Html.DevExtreme().DataSource(ds =>
    {
        ds.Store(store =>
        {
            store.Type(DataSourceStoreType.Array);
            store.Read(read =>
            {
                read.Action("GetPatients", "Home");
            });
            store.Insert(insert =>
            {
                insert.Action("Create", "Home");
            });
            store.Update(update =>
            {
                update.Action("Update", "Home");
            });
            store.Remove(remove =>
            {
                remove.Action("Delete", "Home");
            });
        });
    });

    var grid = Html.DevExtreme().DataGrid(settings =>
    {
        settings.Name = "PatientGrid";
        settings.DataSource(dataSource);
        settings.KeyField("Oid");
        settings.Columns.Add(column =>
        {
            column.DataField(nameof(Patient.FullName));
            column.DataField(nameof(Patient.Phone));
            column.DataField(nameof(Patient.Address));
            column.DataField(nameof(Patient.Birthday));
            column.DataField(nameof(Patient.LastVisit));
            column.DataField(nameof(Patient.NextVisit));
        });
        settings.Editable(editable =>
        {
            editable.Mode(GridEditMode.Popup);
            editable.AllowAdding(true);
            editable.AllowUpdating(true);
            editable.AllowDeleting(true);
        });
    });

    // Menampilkan Grid
    @grid.GetHtml()
}

@Html.DevExtreme().Popup(settings =>
{
    settings.Title("Edit Patient");
    settings.Shown("function() { $('#PatientGrid').dxDataGrid('getDataSource').reload(); }");
    settings.ContentTemplate(() =>
    {
        Html.DevExtreme().Form(formSettings =>
        {
            formSettings.Items.Add(i =>
            {
                i.DataField(nameof(Patient.FirstName));
            });
            formSettings.Items.Add(i =>
            {
                i.DataField(nameof(Patient.LastName));
            });
            formSettings.Items.Add(i =>
            {
                i.DataField(nameof(Patient.Address));
            });
            formSettings.Items.Add(i =>
            {
                i.DataField(nameof(Patient.Birthday));
            });
            formSettings.Items.Add(i =>
            {
                i.DataField(nameof(Patient.Email));
            });
            formSettings.Items.Add(i =>
            {
                i.DataField(nameof(Patient.Phone));
            });
        }).Render();
    });
}).Render();
